{"version":3,"sources":["Signup/Signup.js","LogIn/Login.js","App.js","reportWebVitals.js","index.js"],"names":["signupSchema","yup","shape","Email","required","CreatePassword","min","RepeatPassword","inErrs","Signup","useState","setEmail","setPass","setPass2","errors","setErrors","submitted","setSubmitted","data","validateForm","validate","abortEarly","then","obj","catch","err","newErrors","inner","reduce","acc","curr","path","message","setObject","useEffect","handleChange","e","target","name","value","className","style","boxShadow","color","fontSize","onSubmit","preventDefault","htmlFor","type","placeholder","onChange","id","logInSchema","LoginPage","marginLeft","justifyContent","marginTop","paddingTop","width","paddingLeft","to","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b1c2b44.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport * as yup from \"yup\";\r\nimport './Signup.css';\r\nimport { FcGoogle } from 'react-icons/fc';\r\n\r\n// configure schema \r\nconst signupSchema = yup.object().shape({\r\n    //  name: yup.string().required(),\r\n    Email: yup.string().required(),\r\n    CreatePassword: yup.string().min(8).required(),\r\n    RepeatPassword: yup.string().min(8).required(),\r\n\r\n})\r\nconst inErrs = {\r\n    //  name: '',\r\n    Email: '',\r\n    CreatePassword: '',\r\n    RepeatPassword: '',\r\n}\r\nexport default function Signup() {\r\n    //  const [name, setName] = useState(\"\");\r\n    //1-controlled component\r\n    const [Email, setEmail] = useState(\"\");\r\n    const [CreatePassword, setPass] = useState(\"\");\r\n    const [RepeatPassword, setPass2] = useState(\"\");\r\n    const [errors, setErrors] = useState(inErrs);\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const data = { /*name,*/ Email, CreatePassword, RepeatPassword };\r\n\r\n    const validateForm = (data) => {\r\n        signupSchema\r\n            .validate(data, { abortEarly: false })\r\n            // signupSchema.isValid(data) return true /false\r\n            //abortEarly:false => return all error\r\n            .then((obj) => {\r\n                // console.log(valid)\r\n                // if valid  you can use the api \r\n                /*  if (valid){\r\n                      console.log(\"valid\");\r\n                  }\r\n                  else {\r\n                      console.log(\"else\");\r\n                  }*/\r\n                setErrors(inErrs);\r\n                //console.log(obj)\r\n            }).catch((err) => {\r\n                //  console.dir(err.inner)//inner connect with path and msg=> path :msg\r\n                // console.log(\"err\")\r\n                const newErrors = err.inner.reduce((acc, curr) => {\r\n                    //  console.log(curr)\r\n                    acc[curr.path] = curr.message;\r\n                    return acc;\r\n                }, {})\r\n                setErrors(newErrors);\r\n            })\r\n\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setSubmitted(true);\r\n        validateForm(data);\r\n    }\r\n\r\n    const setObject = {\r\n        // name: setName,\r\n        Email: setEmail,\r\n        CreatePassword: setPass,\r\n        RepeatPassword: setPass2,\r\n    };\r\n\r\n    /*\r\n        switch(e.target.name) {\r\n  case name:\r\n    setName();\r\n    break;\r\n\r\n  case Email:\r\n  setEmail();\r\n    break;\r\n\r\n   case  CreatePassword:\r\n       setPass();\r\n    break;\r\n\r\n     case  RepeatPassword:\r\n       setPass2();\r\n    break;\r\n\r\n  default:\r\n   console.log(\"sth wrong\")\r\n}\r\n    */\r\n    useEffect(() => {\r\n        if (submitted) {\r\n            validateForm(data);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [/*name,*/ Email, CreatePassword, RepeatPassword]);\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setObject[name](value);\r\n        //ex:- setObject[Email]=>>setEmail(new value)so state will change with new value \r\n    }\r\n    return (\r\n        <div className=\"direction\">\r\n            <div className=\"info\">\r\n                <div className=\"info-color\">\r\n                    <div>\r\n                        <div className=\"ec-con\">\r\n                            <div className=\"ecl1\" style={{ boxShadow: \"11px 16px 0 0 #FFFFFF\" }}></div>\r\n                            <div className=\"ecl\" style={{ boxShadow: \"11px 16px 0 0 #FFFFFF\" }}></div>\r\n                        </div>\r\n                        <div className=\"title\" style={{ color: \"#FFFFFF\", fontSize: \"15px\" }}>Gamers</div>\r\n                    </div>\r\n                    <div className=\"info-desc\">\r\n                        <p className=\"qoute\" style={{ color: \"#00DAF7\" }}></p>\r\n                        <div> always observe the people who pass by when I ride an escalator. I'll never see most of them again, so I imagine a lot of things about their lives... about the day ahead of them.\r\n                            </div>\r\n                    </div>\r\n                    <div className=\"info-auth\">Hideo Kojima</div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"line2\">\r\n                        <h1>Register Individual Account!</h1>\r\n                        <p>For the purpose of gamers regulation, your details are required.</p>\r\n                    </div>\r\n                    {  /* <label htmlFor=\"name\" className={`label${errors.name}&& error`}>\r\n                        {//${errors.name}&& error ==> if there is an  error \r\n                        }\r\n                    UserName:\r\n                     <input type=\"text\" value={name} onChange={handleChange} name=\"name\" />\r\n                        {errors && <div className=\"err\">{errors.name}</div>}\r\n                    </label>*/}\r\n                    <label htmlFor=\"Email\">\r\n                        Email address*\r\n                    </label>\r\n\r\n                    <input type=\"email\" placeholder=\"Enter email address\" value={Email} onChange={handleChange} name=\"Email\" />\r\n                    {errors && <div className=\"err\">{errors.Email}</div>}\r\n\r\n                    <label htmlFor=\"CreatePassword\">\r\n                        Create Password*\r\n                    </label>\r\n                    <input type=\"password\" placeholder=\"Password\" value={CreatePassword} onChange={handleChange} name=\"CreatePassword\" />\r\n                    {errors && <div className=\"err\">{errors.CreatePassword}</div>}\r\n                    <label htmlFor=\"RepeatPassword\">\r\n                        Repeat Password*\r\n                    </label>\r\n                    <input type=\"password\" placeholder=\"Repeat password\" value={RepeatPassword} onChange={handleChange} name=\"RepeatPassword\" />\r\n                    {//or just use setPass2(e.target.value)\r\n                    }\r\n                    {errors && <div className=\"err\">{errors.RepeatPassword}</div>}\r\n\r\n                    <div className='con'>\r\n                        <input type=\"checkbox\" id=\"agree\" name=\"agree\" value=\"agree\" />\r\n                        <label className='checked' htmlFor=\"agree\"> I agree to terms & conditions</label>\r\n                    </div>\r\n                    <input type=\"submit\" value=\"Register Account\" />\r\n                    <div className=\"line\"><p className=\"or\">or</p></div>\r\n                    <div className=\"ic\"> <FcGoogle /></div>\r\n                    <input type=\"button\" value=\"login\" />\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","/*import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./Login.css\";\r\n\r\nexport default function Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  function validateForm() {\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n  }\r\n\r\n  return (\r\n    <div className=\"Login\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group size=\"lg\" controlId=\"email\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\r\n          Login\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}*/\r\n\r\nimport \"./Login.css\";\r\nimport { FcGoogle } from 'react-icons/fc';\r\nimport { GrTwitter } from 'react-icons/gr';\r\nimport { GrLinkedinOption } from 'react-icons/gr';\r\nimport { AiFillGithub } from 'react-icons/ai';\r\nimport { BsEye } from 'react-icons/bs';\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport * as yup from \"yup\";\r\nconst logInSchema = yup.object().shape({\r\n    Email: yup.string().required(),\r\n    CreatePassword: yup.string().min(8).required(),\r\n\r\n})\r\nconst inErrs = {\r\n    Email: '',\r\n    CreatePassword: '',\r\n}\r\nexport default function LoginPage() {\r\n    const [Email, setEmail] = useState(\"\");\r\n    const [CreatePassword, setPass] = useState(\"\");\r\n    const [errors, setErrors] = useState(inErrs);\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const data = { Email, CreatePassword };\r\n\r\n    const validateForm = (data) => {\r\n        logInSchema\r\n            .validate(data, { abortEarly: false })\r\n\r\n            .then((obj) => {\r\n\r\n                setErrors(inErrs);\r\n\r\n            }).catch((err) => {\r\n\r\n                const newErrors = err.inner.reduce((acc, curr) => {\r\n\r\n                    acc[curr.path] = curr.message;\r\n                    return acc;\r\n                }, {})\r\n            \r\n                setErrors(newErrors);\r\n            })\r\n\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setSubmitted(true);\r\n        validateForm(data);\r\n    }\r\n\r\n    const setObject = {\r\n        Email: setEmail,\r\n        CreatePassword: setPass,\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (submitted) {\r\n            validateForm(data);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [Email, CreatePassword]);\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setObject[name](value);\r\n\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"login-cont\">\r\n                <div className=\"login-color\">\r\n                    <div>\r\n                        <div className=\"ec-con\">\r\n                            <div className=\"ecl1\"></div>\r\n                            <div className=\"ecl\"></div>\r\n                        </div>\r\n                        <div className=\"title\">Gamers</div>\r\n                    </div>\r\n\r\n                    <div className=\"login-desc\">\r\n                        <p className=\"qoute\"></p>\r\n                        <div> always observe the people who pass by when I ride an escalator. I'll never see most of them again, so I imagine a lot of things about their lives... about the day ahead of them.\r\n                            </div>\r\n                    </div>\r\n                    <div className=\"login-auth\">Hideo Kojima</div>\r\n                    <div className=\"login\"></div>\r\n                </div>\r\n\r\n            </div>\r\n            <div>\r\n\r\n                <form style={{ marginLeft: \"127px\" }} onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <h1 style={{ justifyContent: \"center\" }}>Join the game!</h1>\r\n                        <p style={{ marginTop: \"0px\" }}>Go inside the best gamers social network!</p>\r\n                    </div>\r\n                    <div className=\"icon-cont\">\r\n                        <div className=\"icon\"><FcGoogle style={{ paddingTop: \"15px\" }} /></div>\r\n                        <div className=\"icon\" style={{ color: \"#55ACEE\" }}><GrTwitter style={{ paddingTop: \"15px\" }} /></div>\r\n                        <div className=\"icon\" style={{ color: \"#0E76A8\" }}><GrLinkedinOption style={{ paddingTop: \"15px\" }} /></div>\r\n                        <div className=\"icon\" style={{ color: \"#000000\" }}><AiFillGithub style={{ paddingTop: \"15px\" }} /></div>\r\n                    </div>\r\n                    <div className=\"line\" style={{ width: \"55%\" }}><p className=\"or\">or</p></div>\r\n                    <label htmlFor=\"Email\">\r\n                        Your email    </label>\r\n                    <input type=\"email\" placeholder=\"Write your email\" value={Email} onChange={handleChange} name=\"Email\" />\r\n                    {errors && <div className=\"err\">{errors.Email}</div>}\r\n                    <label htmlFor=\"CreatePassword\">\r\n                        Enter your password    </label>\r\n                    <div >\r\n                        <i className=\"eye-icon\"> <BsEye /></i>\r\n                        <input type=\"password\" value={CreatePassword} onChange={handleChange} name=\"CreatePassword\" />\r\n                    </div>\r\n                    {errors && <div className=\"err\">{errors.CreatePassword}</div>}\r\n                    <input style={{ paddingLeft: \"181px\" }} type=\"submit\" value=\"Login\" />\r\n                    <p className=\"register\" >Don’t have an account?  <Link to=\"/signup\"> Register</Link></p>\r\n                </form>\r\n            </div>\r\n        </div >);\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import './App.css';\n\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\"\nimport Signup from \"./Signup/Signup.js\"\nimport LoginPage from \"./LogIn/Login.js\"\nfunction App() {\n  return (\n    <div className=\"App\">\n         <BrowserRouter>\n                <Switch>\n                    <Route exact path=\"/signup\">\n                        <Signup />\n                    </Route>\n                    <Route  path=\"/\">\n                        <LoginPage />\n                    </Route>\n                </Switch>\n            </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}